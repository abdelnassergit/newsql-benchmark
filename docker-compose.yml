services:
  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: sbtest
      MYSQL_USER: sbtest
      MYSQL_PASSWORD: password
      # Utilisation de la variable d'environnement pour l'authentification
      MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  tidb:
    image: pingcap/tidb:latest
    container_name: tidb
    ports:
      - "4000:4000"
    environment:
      - TIDB_ADVERTISE_ADDRESS=tidb
    networks:
      - mynetwork
    depends_on:
      - pd
      - tikv

  pd:
    image: pingcap/pd:latest
    container_name: pd
    ports:
      - "2379:2379"
      - "2380:2380"
    environment:
      - PD_ADVERTISE_CLIENT_URLS=pd:2379
    command:
      - --name=pd
      - --data-dir=/var/lib/pd
      - --client-urls=http://0.0.0.0:2379
      - --peer-urls=http://0.0.0.0:2380
      - --advertise-client-urls=http://pd:2379
      - --advertise-peer-urls=http://pd:2380
    networks:
      - mynetwork

  tikv:
    image: pingcap/tikv:latest
    container_name: tikv
    ports:
      - "20160:20160"
    command:
      - --pd=pd:2379
      - --addr=0.0.0.0:20160
      - --advertise-addr=tikv:20160
      - --data-dir=/var/lib/tikv
    networks:
      - mynetwork
    depends_on:
      - pd

networks:
  mynetwork:
    driver: bridge

volumes:
  mysql-data:

  # A decommenter si vous souhaitez utiliser une architecture AMD64
  # sysbench:
  #   image: severalnines/sysbench:latest
  #   container_name: sysbench
  #   entrypoint: ["tail", "-f", "/dev/null"] # Keep container running
  #   depends_on:
  #     - mysql
  #     - tidb
  #   volumes:
  #     - ./scripts:/scripts
